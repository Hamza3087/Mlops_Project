apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlops-app
  labels:
    app: mlops-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mlops-app
  template:
    metadata:
      labels:
        app: mlops-app
    spec:
      containers:
      - name: mfrontend
        image: hamza0707/mfrontend:latest 
        ports:
        - containerPort: 80
        readinessProbe: # Ensures the frontend is ready before sending traffic
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe: # Monitors the frontend's health during runtime
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 20
        resources: # Resource requests and limits for frontend
          requests:
            memory: "128Mi"
            cpu: "250m"
          limits:
            memory: "256Mi"
            cpu: "500m"

      - name: mbackend
        image: hamza0707/mbackend:latest
        ports:
        - containerPort: 8080  # Assuming the backend runs on port 8080
        readinessProbe: # Ensures the backend is ready before sending traffic
          httpGet:
            path: /health  # Assuming you have a health check endpoint for the backend
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe: # Monitors the backend's health during runtime
          httpGet:
            path: /health  # Assuming you have a health check endpoint for the backend
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 20
        resources: # Resource requests and limits for backend
          requests:
            memory: "128Mi"
            cpu: "250m"
          limits:
            memory: "256Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: mlops-service
  labels:
    app: mlops-app
spec:
  selector:
    app: mlops-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80  # Expose frontend on port 80
    - protocol: TCP
      port: 8080
      targetPort: 8080  # Expose backend on port 8080
  type: LoadBalancer
