name: CI Pipeline - Dev to Testing

# Ensure the workflow has write permissions
permissions:
  contents: write
  security-events: write  # Required for CodeQL to upload results

on:
  push:
    branches:
      - dev

jobs:
  test-build-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GH_PAT }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install pytest

    - name: Run Unit Tests
      run: pytest tests/test_main.py

    # - name: Log in to DockerHub
    #   uses: docker/login-action@v2
    #   with:
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}

    # - name: Build and Push Backend Docker Image
    #   run: |
    #     docker build -t hamza0707/mbackend:latest -f Dockerfile .
    #     docker push hamza0707/mbackend:latest

    # - name: Build and Push Frontend Docker Image
    #   run: |
    #     docker build -t hamza0707/mfrontend:latest -f my-app/Dockerfile my-app/
    #     docker push hamza0707/mfrontend:latest

        # Push to staging after successful tests on dev
      push-to-testing:
        needs: build-and-test
        if: github.ref == 'refs/heads/dev' && success()
        runs-on: ubuntu-latest
        steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history so that all branches are available

      - name: Set up Git for pushing
        run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git remote set-url origin https://x-access-token:${{ secrets.MLPROJECT }}@github.com/${{ github.repository }}.git

      - name: Push changes to staging
        run: |
        git checkout staging || git checkout -b staging
        git merge dev
        git push origin staging

    # - name: Push to Testing Branch
    #   run: |
    #     git config --global user.name "github-actions[bot]"
    #     git config --global user.email "github-actions[bot]@users.noreply.github.com"
    #     if git rev-parse --verify origin/testing >/dev/null 2>&1; then
    #       git checkout testing
    #     else
    #       git checkout -b testing
    #     fi
    #     git push https://${{ secrets.GH_PAT }}@github.com/Hamza3087/Mlops_Project.git testing
