name: CI Pipeline - Dev to Testing

# Ensure the workflow has write permissions
permissions:
  contents: write
  security-events: write  # Required for CodeQL to upload results

on:
  push:
    branches:
      - dev

jobs:
  test-build-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.MLPROJECT }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    # Uncomment if you need to run tests
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install pytest

    - name: Run Unit Tests
      run: pytest tests/test_main.py

  push-to-testing:
    needs: test-build-deploy
    if: github.ref == 'refs/heads/dev' && success()
    runs-on: ubuntu-latest

    steps:
    - name: Checkout all branches
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.MLPROJECT }}
        fetch-depth: 0  # Fetch all history so all branches are available

    - name: Set up Git for pushing
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git remote set-url origin https://x-access-token:${{ secrets.MLPROJECT }}@github.com/${{ github.repository }}.git

    - name: Attempt to merge dev into testing
      run: |
        git checkout testing || git checkout -b testing
        git merge dev || true  # Allow the workflow to proceed even if there are conflicts

    - name: Resolve conflicts (if any)
      if: ${{ failure() }}
      run: |
        echo "Resolving conflicts automatically for .github/workflows/ci.yml"
        git checkout --ours .github/workflows/ci.yml  # Keep changes from the `testing` branch
        git add .github/workflows/ci.yml
        git commit -m "Resolved merge conflict in ci.yml"

    - name: Push changes to testing branch
      run: git push origin testing
